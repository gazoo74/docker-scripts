#!/bin/sh
#
# Copyright (c) 2017-2018 GaÃ«l PORTAY <gael.portay@savoirfairelinux.com>
#
# This program is free software: you can redistribute it and/or modify it under
# the terms of the MIT License.
#

set -e

usage() {
	cat <<EOF
Usage: ${0##*/} [OPTIONS] [--] [DOCKER_RM_RMI_EXTRA_ARGUMENTS]

Remove exited containers and dangling images.

Options:
      -E or --no-exited         Do not remove exited containers.
      -D or --no-dangling       Do not remove dangling images.
      -c or --created           Remove created containers.
            --running           Remove running containers.
            --all               Remove all containers except running.
                                ie. exited, dangling, and created.
      -h or --help              Print usage.
EOF
}

parse_arguments() {
	exited=true
	dangling=true
	created=false
	running=false
	while [ "$#" -ne 0 ]; do
		if [ "$1" = "-h" ] || [ "$1" = "--help" ]; then
			usage
			exit 0
		elif [ "$1" = "-E" ] || [ "$1" = "--no-exited" ]; then
			exited=false
		elif [ "$1" = "-D" ] || [ "$1" = "--no-dangling" ]; then
			dangling=false
		elif [ "$1" = "-c" ] || [ "$1" = "--created" ]; then
			created=true
		elif [ "$1" = "--running" ]; then
			running=true
		elif [ "$1" = "--all" ]; then
			exited=true
			dangling=true
			created=true
		elif [ "$1" = "--" ]; then
			shift
			break
		fi
		shift
	done
}

parse_arguments "$@"

# Remove exited containers
if $exited; then
	docker ps --quiet --all --filter "status=exited" | \
	while read -r id; do docker rm  "$id" "$@"; done
fi

# Remove dangling images
if $dangling; then
	docker images --quiet --filter "dangling=true" | \
	while read -r id; do docker rmi "$id" "$@"; done
fi

# Remove created containers
if $created; then
	docker ps --quiet --all --filter "status=created" | \
	while read -r id; do docker rm  "$id" "$@"; done
fi

# Remove running containers
if $running; then
	docker ps --quiet --all --filter "status=running" | \
	while read -r id; do docker rm  "$id" "$@" --force; done
fi
